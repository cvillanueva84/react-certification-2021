// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`VideoDetails Renders VideoDetails Page 1`] = `
<BrowserRouter>
  <Router
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "createHref": [Function],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <withRouter(VideoDetails)>
      <VideoDetails
        history={
          Object {
            "action": "POP",
            "block": [Function],
            "createHref": [Function],
            "go": [Function],
            "goBack": [Function],
            "goForward": [Function],
            "length": 1,
            "listen": [Function],
            "location": Object {
              "hash": "",
              "pathname": "/",
              "search": "",
              "state": undefined,
            },
            "push": [Function],
            "replace": [Function],
          }
        }
        location={
          Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          }
        }
        match={
          Object {
            "isExact": true,
            "params": Object {},
            "path": "/",
            "url": "/",
          }
        }
      >
        <section>
          <AppLayout
            handleSubmit={[Function]}
          >
            <div>
              <WithStyles(ForwardRef(Drawer))
                anchor="left"
                classes={
                  Object {
                    "paper": "side-menu-container",
                  }
                }
                onClose={[Function]}
                open={false}
              >
                <ForwardRef(Drawer)
                  anchor="left"
                  classes={
                    Object {
                      "docked": "MuiDrawer-docked",
                      "modal": "MuiDrawer-modal",
                      "paper": "MuiDrawer-paper side-menu-container",
                      "paperAnchorBottom": "MuiDrawer-paperAnchorBottom",
                      "paperAnchorDockedBottom": "MuiDrawer-paperAnchorDockedBottom",
                      "paperAnchorDockedLeft": "MuiDrawer-paperAnchorDockedLeft",
                      "paperAnchorDockedRight": "MuiDrawer-paperAnchorDockedRight",
                      "paperAnchorDockedTop": "MuiDrawer-paperAnchorDockedTop",
                      "paperAnchorLeft": "MuiDrawer-paperAnchorLeft",
                      "paperAnchorRight": "MuiDrawer-paperAnchorRight",
                      "paperAnchorTop": "MuiDrawer-paperAnchorTop",
                      "root": "MuiDrawer-root",
                    }
                  }
                  onClose={[Function]}
                  open={false}
                >
                  <ForwardRef(Modal)
                    BackdropComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "Naked": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "propTypes": Object {
                            "children": [Function],
                            "className": [Function],
                            "classes": [Function],
                            "invisible": [Function],
                            "open": [Function],
                            "transitionDuration": [Function],
                          },
                          "render": [Function],
                        },
                        "displayName": "WithStyles(ForwardRef(Backdrop))",
                        "options": Object {
                          "defaultTheme": Object {
                            "breakpoints": Object {
                              "between": [Function],
                              "down": [Function],
                              "keys": Array [
                                "xs",
                                "sm",
                                "md",
                                "lg",
                                "xl",
                              ],
                              "only": [Function],
                              "up": [Function],
                              "values": Object {
                                "lg": 1280,
                                "md": 960,
                                "sm": 600,
                                "xl": 1920,
                                "xs": 0,
                              },
                              "width": [Function],
                            },
                            "direction": "ltr",
                            "mixins": Object {
                              "gutters": [Function],
                              "toolbar": Object {
                                "@media (min-width:0px) and (orientation: landscape)": Object {
                                  "minHeight": 48,
                                },
                                "@media (min-width:600px)": Object {
                                  "minHeight": 64,
                                },
                                "minHeight": 56,
                              },
                            },
                            "overrides": Object {},
                            "palette": Object {
                              "action": Object {
                                "activatedOpacity": 0.12,
                                "active": "rgba(0, 0, 0, 0.54)",
                                "disabled": "rgba(0, 0, 0, 0.26)",
                                "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                "disabledOpacity": 0.38,
                                "focus": "rgba(0, 0, 0, 0.12)",
                                "focusOpacity": 0.12,
                                "hover": "rgba(0, 0, 0, 0.04)",
                                "hoverOpacity": 0.04,
                                "selected": "rgba(0, 0, 0, 0.08)",
                                "selectedOpacity": 0.08,
                              },
                              "augmentColor": [Function],
                              "background": Object {
                                "default": "#fafafa",
                                "paper": "#fff",
                              },
                              "common": Object {
                                "black": "#000",
                                "white": "#fff",
                              },
                              "contrastThreshold": 3,
                              "divider": "rgba(0, 0, 0, 0.12)",
                              "error": Object {
                                "contrastText": "#fff",
                                "dark": "#d32f2f",
                                "light": "#e57373",
                                "main": "#f44336",
                              },
                              "getContrastText": [Function],
                              "grey": Object {
                                "100": "#f5f5f5",
                                "200": "#eeeeee",
                                "300": "#e0e0e0",
                                "400": "#bdbdbd",
                                "50": "#fafafa",
                                "500": "#9e9e9e",
                                "600": "#757575",
                                "700": "#616161",
                                "800": "#424242",
                                "900": "#212121",
                                "A100": "#d5d5d5",
                                "A200": "#aaaaaa",
                                "A400": "#303030",
                                "A700": "#616161",
                              },
                              "info": Object {
                                "contrastText": "#fff",
                                "dark": "#1976d2",
                                "light": "#64b5f6",
                                "main": "#2196f3",
                              },
                              "primary": Object {
                                "contrastText": "#fff",
                                "dark": "#303f9f",
                                "light": "#7986cb",
                                "main": "#3f51b5",
                              },
                              "secondary": Object {
                                "contrastText": "#fff",
                                "dark": "#c51162",
                                "light": "#ff4081",
                                "main": "#f50057",
                              },
                              "success": Object {
                                "contrastText": "rgba(0, 0, 0, 0.87)",
                                "dark": "#388e3c",
                                "light": "#81c784",
                                "main": "#4caf50",
                              },
                              "text": Object {
                                "disabled": "rgba(0, 0, 0, 0.38)",
                                "hint": "rgba(0, 0, 0, 0.38)",
                                "primary": "rgba(0, 0, 0, 0.87)",
                                "secondary": "rgba(0, 0, 0, 0.54)",
                              },
                              "tonalOffset": 0.2,
                              "type": "light",
                              "warning": Object {
                                "contrastText": "rgba(0, 0, 0, 0.87)",
                                "dark": "#f57c00",
                                "light": "#ffb74d",
                                "main": "#ff9800",
                              },
                            },
                            "props": Object {},
                            "shadows": Array [
                              "none",
                              "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                              "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                              "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                              "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                              "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                              "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                              "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                              "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                              "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                              "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                              "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                              "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                              "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                              "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                              "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                              "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                              "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                              "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                            ],
                            "shape": Object {
                              "borderRadius": 4,
                            },
                            "spacing": [Function],
                            "transitions": Object {
                              "create": [Function],
                              "duration": Object {
                                "complex": 375,
                                "enteringScreen": 225,
                                "leavingScreen": 195,
                                "short": 250,
                                "shorter": 200,
                                "shortest": 150,
                                "standard": 300,
                              },
                              "easing": Object {
                                "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                              },
                              "getAutoHeightDuration": [Function],
                            },
                            "typography": Object {
                              "body1": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "1rem",
                                "fontWeight": 400,
                                "letterSpacing": "0.00938em",
                                "lineHeight": 1.5,
                              },
                              "body2": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "0.875rem",
                                "fontWeight": 400,
                                "letterSpacing": "0.01071em",
                                "lineHeight": 1.43,
                              },
                              "button": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "0.875rem",
                                "fontWeight": 500,
                                "letterSpacing": "0.02857em",
                                "lineHeight": 1.75,
                                "textTransform": "uppercase",
                              },
                              "caption": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "0.75rem",
                                "fontWeight": 400,
                                "letterSpacing": "0.03333em",
                                "lineHeight": 1.66,
                              },
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": 14,
                              "fontWeightBold": 700,
                              "fontWeightLight": 300,
                              "fontWeightMedium": 500,
                              "fontWeightRegular": 400,
                              "h1": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "6rem",
                                "fontWeight": 300,
                                "letterSpacing": "-0.01562em",
                                "lineHeight": 1.167,
                              },
                              "h2": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "3.75rem",
                                "fontWeight": 300,
                                "letterSpacing": "-0.00833em",
                                "lineHeight": 1.2,
                              },
                              "h3": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "3rem",
                                "fontWeight": 400,
                                "letterSpacing": "0em",
                                "lineHeight": 1.167,
                              },
                              "h4": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "2.125rem",
                                "fontWeight": 400,
                                "letterSpacing": "0.00735em",
                                "lineHeight": 1.235,
                              },
                              "h5": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "1.5rem",
                                "fontWeight": 400,
                                "letterSpacing": "0em",
                                "lineHeight": 1.334,
                              },
                              "h6": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "1.25rem",
                                "fontWeight": 500,
                                "letterSpacing": "0.0075em",
                                "lineHeight": 1.6,
                              },
                              "htmlFontSize": 16,
                              "overline": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "0.75rem",
                                "fontWeight": 400,
                                "letterSpacing": "0.08333em",
                                "lineHeight": 2.66,
                                "textTransform": "uppercase",
                              },
                              "pxToRem": [Function],
                              "round": [Function],
                              "subtitle1": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "1rem",
                                "fontWeight": 400,
                                "letterSpacing": "0.00938em",
                                "lineHeight": 1.75,
                              },
                              "subtitle2": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "0.875rem",
                                "fontWeight": 500,
                                "letterSpacing": "0.00714em",
                                "lineHeight": 1.57,
                              },
                            },
                            "zIndex": Object {
                              "appBar": 1100,
                              "drawer": 1200,
                              "mobileStepper": 1000,
                              "modal": 1300,
                              "snackbar": 1400,
                              "speedDial": 1050,
                              "tooltip": 1500,
                            },
                          },
                          "name": "MuiBackdrop",
                        },
                        "propTypes": Object {
                          "classes": [Function],
                          "innerRef": [Function],
                        },
                        "render": [Function],
                        "useStyles": [Function],
                      }
                    }
                    BackdropProps={
                      Object {
                        "transitionDuration": Object {
                          "enter": 225,
                          "exit": 195,
                        },
                      }
                    }
                    className="MuiDrawer-root MuiDrawer-modal"
                    onClose={[Function]}
                    open={false}
                  />
                </ForwardRef(Drawer)>
              </WithStyles(ForwardRef(Drawer))>
              <Header
                handleSubmit={[Function]}
                setIsSideMenuActive={[Function]}
              >
                <WithStyles(ForwardRef(AppBar))
                  position="sticky"
                >
                  <ForwardRef(AppBar)
                    classes={
                      Object {
                        "colorDefault": "MuiAppBar-colorDefault",
                        "colorInherit": "MuiAppBar-colorInherit",
                        "colorPrimary": "MuiAppBar-colorPrimary",
                        "colorSecondary": "MuiAppBar-colorSecondary",
                        "colorTransparent": "MuiAppBar-colorTransparent",
                        "positionAbsolute": "MuiAppBar-positionAbsolute",
                        "positionFixed": "MuiAppBar-positionFixed",
                        "positionRelative": "MuiAppBar-positionRelative",
                        "positionStatic": "MuiAppBar-positionStatic",
                        "positionSticky": "MuiAppBar-positionSticky",
                        "root": "MuiAppBar-root",
                      }
                    }
                    position="sticky"
                  >
                    <WithStyles(ForwardRef(Paper))
                      className="MuiAppBar-root MuiAppBar-positionSticky MuiAppBar-colorPrimary"
                      component="header"
                      elevation={4}
                      square={true}
                    >
                      <ForwardRef(Paper)
                        className="MuiAppBar-root MuiAppBar-positionSticky MuiAppBar-colorPrimary"
                        classes={
                          Object {
                            "elevation0": "MuiPaper-elevation0",
                            "elevation1": "MuiPaper-elevation1",
                            "elevation10": "MuiPaper-elevation10",
                            "elevation11": "MuiPaper-elevation11",
                            "elevation12": "MuiPaper-elevation12",
                            "elevation13": "MuiPaper-elevation13",
                            "elevation14": "MuiPaper-elevation14",
                            "elevation15": "MuiPaper-elevation15",
                            "elevation16": "MuiPaper-elevation16",
                            "elevation17": "MuiPaper-elevation17",
                            "elevation18": "MuiPaper-elevation18",
                            "elevation19": "MuiPaper-elevation19",
                            "elevation2": "MuiPaper-elevation2",
                            "elevation20": "MuiPaper-elevation20",
                            "elevation21": "MuiPaper-elevation21",
                            "elevation22": "MuiPaper-elevation22",
                            "elevation23": "MuiPaper-elevation23",
                            "elevation24": "MuiPaper-elevation24",
                            "elevation3": "MuiPaper-elevation3",
                            "elevation4": "MuiPaper-elevation4",
                            "elevation5": "MuiPaper-elevation5",
                            "elevation6": "MuiPaper-elevation6",
                            "elevation7": "MuiPaper-elevation7",
                            "elevation8": "MuiPaper-elevation8",
                            "elevation9": "MuiPaper-elevation9",
                            "outlined": "MuiPaper-outlined",
                            "root": "MuiPaper-root",
                            "rounded": "MuiPaper-rounded",
                          }
                        }
                        component="header"
                        elevation={4}
                        square={true}
                      >
                        <header
                          className="MuiPaper-root MuiAppBar-root MuiAppBar-positionSticky MuiAppBar-colorPrimary MuiPaper-elevation4"
                        >
                          <WithStyles(ForwardRef(Toolbar))
                            className="header-container"
                          >
                            <ForwardRef(Toolbar)
                              className="header-container"
                              classes={
                                Object {
                                  "dense": "MuiToolbar-dense",
                                  "gutters": "MuiToolbar-gutters",
                                  "regular": "MuiToolbar-regular",
                                  "root": "MuiToolbar-root",
                                }
                              }
                            >
                              <div
                                className="MuiToolbar-root MuiToolbar-regular header-container MuiToolbar-gutters"
                              >
                                <styled.div
                                  className="header-icon"
                                >
                                  <div
                                    className="sc-jSFjdj fVTdrp header-icon"
                                  >
                                    <styled.div>
                                      <div
                                        className="sc-jSFjdj fVTdrp"
                                      >
                                        <span
                                          aria-hidden="true"
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                        >
                                          <ForwardRef(MenuIcon)>
                                            <WithStyles(ForwardRef(SvgIcon))>
                                              <ForwardRef(SvgIcon)
                                                classes={
                                                  Object {
                                                    "colorAction": "MuiSvgIcon-colorAction",
                                                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                    "colorError": "MuiSvgIcon-colorError",
                                                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                    "root": "MuiSvgIcon-root",
                                                  }
                                                }
                                              >
                                                <svg
                                                  aria-hidden={true}
                                                  className="MuiSvgIcon-root"
                                                  focusable="false"
                                                  viewBox="0 0 24 24"
                                                >
                                                  <path
                                                    d="M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z"
                                                  />
                                                </svg>
                                              </ForwardRef(SvgIcon)>
                                            </WithStyles(ForwardRef(SvgIcon))>
                                          </ForwardRef(MenuIcon)>
                                        </span>
                                      </div>
                                    </styled.div>
                                    <styled.div>
                                      <div
                                        className="sc-jSFjdj fVTdrp"
                                      >
                                        <Link
                                          to="/"
                                        >
                                          <LinkAnchor
                                            href="/"
                                            navigate={[Function]}
                                          >
                                            <a
                                              href="/"
                                              onClick={[Function]}
                                            >
                                              <ForwardRef(HomeIcon)>
                                                <WithStyles(ForwardRef(SvgIcon))>
                                                  <ForwardRef(SvgIcon)
                                                    classes={
                                                      Object {
                                                        "colorAction": "MuiSvgIcon-colorAction",
                                                        "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                        "colorError": "MuiSvgIcon-colorError",
                                                        "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                        "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                        "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                        "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                        "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                        "root": "MuiSvgIcon-root",
                                                      }
                                                    }
                                                  >
                                                    <svg
                                                      aria-hidden={true}
                                                      className="MuiSvgIcon-root"
                                                      focusable="false"
                                                      viewBox="0 0 24 24"
                                                    >
                                                      <path
                                                        d="M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z"
                                                      />
                                                    </svg>
                                                  </ForwardRef(SvgIcon)>
                                                </WithStyles(ForwardRef(SvgIcon))>
                                              </ForwardRef(HomeIcon)>
                                            </a>
                                          </LinkAnchor>
                                        </Link>
                                      </div>
                                    </styled.div>
                                  </div>
                                </styled.div>
                                <styled.div
                                  className="search-bar"
                                >
                                  <div
                                    className="sc-jSFjdj fVTdrp search-bar"
                                  >
                                    <input
                                      onChange={[Function]}
                                      placeholder="Search"
                                      type="text"
                                      value=""
                                    />
                                    <button
                                      onClick={[Function]}
                                      type="button"
                                    >
                                      <ForwardRef(SearchIcon)>
                                        <WithStyles(ForwardRef(SvgIcon))>
                                          <ForwardRef(SvgIcon)
                                            classes={
                                              Object {
                                                "colorAction": "MuiSvgIcon-colorAction",
                                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                "colorError": "MuiSvgIcon-colorError",
                                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                "root": "MuiSvgIcon-root",
                                              }
                                            }
                                          >
                                            <svg
                                              aria-hidden={true}
                                              className="MuiSvgIcon-root"
                                              focusable="false"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z"
                                              />
                                            </svg>
                                          </ForwardRef(SvgIcon)>
                                        </WithStyles(ForwardRef(SvgIcon))>
                                      </ForwardRef(SearchIcon)>
                                    </button>
                                  </div>
                                </styled.div>
                                <styled.div>
                                  <div
                                    className="sc-jSFjdj fVTdrp"
                                  >
                                    <styled.div
                                      className="header-icon"
                                    >
                                      <div
                                        className="sc-jSFjdj fVTdrp header-icon"
                                      >
                                        <span
                                          aria-hidden="true"
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                        >
                                          <ForwardRef(AccountCircleIcon)>
                                            <WithStyles(ForwardRef(SvgIcon))>
                                              <ForwardRef(SvgIcon)
                                                classes={
                                                  Object {
                                                    "colorAction": "MuiSvgIcon-colorAction",
                                                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                    "colorError": "MuiSvgIcon-colorError",
                                                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                    "root": "MuiSvgIcon-root",
                                                  }
                                                }
                                              >
                                                <svg
                                                  aria-hidden={true}
                                                  className="MuiSvgIcon-root"
                                                  focusable="false"
                                                  viewBox="0 0 24 24"
                                                >
                                                  <path
                                                    d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 3c1.66 0 3 1.34 3 3s-1.34 3-3 3-3-1.34-3-3 1.34-3 3-3zm0 14.2c-2.5 0-4.71-1.28-6-3.22.03-1.99 4-3.08 6-3.08 1.99 0 5.97 1.09 6 3.08-1.29 1.94-3.5 3.22-6 3.22z"
                                                  />
                                                </svg>
                                              </ForwardRef(SvgIcon)>
                                            </WithStyles(ForwardRef(SvgIcon))>
                                          </ForwardRef(AccountCircleIcon)>
                                        </span>
                                      </div>
                                    </styled.div>
                                    <ProfileMenu
                                      closeMenu={[Function]}
                                      isProfileMenuActive={null}
                                    >
                                      <WithStyles(ForwardRef(Menu))
                                        anchorEl={null}
                                        id="profile-menu"
                                        keepMounted={true}
                                        onClose={[Function]}
                                        open={false}
                                      >
                                        <ForwardRef(Menu)
                                          anchorEl={null}
                                          classes={
                                            Object {
                                              "list": "MuiMenu-list",
                                              "paper": "MuiMenu-paper",
                                            }
                                          }
                                          id="profile-menu"
                                          keepMounted={true}
                                          onClose={[Function]}
                                          open={false}
                                        >
                                          <WithStyles(ForwardRef(Popover))
                                            PaperProps={
                                              Object {
                                                "classes": Object {
                                                  "root": "MuiMenu-paper",
                                                },
                                              }
                                            }
                                            TransitionProps={
                                              Object {
                                                "onEntering": [Function],
                                              }
                                            }
                                            anchorEl={null}
                                            anchorOrigin={
                                              Object {
                                                "horizontal": "left",
                                                "vertical": "top",
                                              }
                                            }
                                            getContentAnchorEl={[Function]}
                                            id="profile-menu"
                                            keepMounted={true}
                                            onClose={[Function]}
                                            open={false}
                                            transformOrigin={
                                              Object {
                                                "horizontal": "left",
                                                "vertical": "top",
                                              }
                                            }
                                            transitionDuration="auto"
                                          >
                                            <ForwardRef(Popover)
                                              PaperProps={
                                                Object {
                                                  "classes": Object {
                                                    "root": "MuiMenu-paper",
                                                  },
                                                }
                                              }
                                              TransitionProps={
                                                Object {
                                                  "onEntering": [Function],
                                                }
                                              }
                                              anchorEl={null}
                                              anchorOrigin={
                                                Object {
                                                  "horizontal": "left",
                                                  "vertical": "top",
                                                }
                                              }
                                              classes={
                                                Object {
                                                  "paper": "MuiPopover-paper",
                                                  "root": "MuiPopover-root",
                                                }
                                              }
                                              getContentAnchorEl={[Function]}
                                              id="profile-menu"
                                              keepMounted={true}
                                              onClose={[Function]}
                                              open={false}
                                              transformOrigin={
                                                Object {
                                                  "horizontal": "left",
                                                  "vertical": "top",
                                                }
                                              }
                                              transitionDuration="auto"
                                            >
                                              <ForwardRef(Modal)
                                                BackdropProps={
                                                  Object {
                                                    "invisible": true,
                                                  }
                                                }
                                                className="MuiPopover-root"
                                                id="profile-menu"
                                                keepMounted={true}
                                                onClose={[Function]}
                                                open={false}
                                              >
                                                <ForwardRef(Portal)
                                                  disablePortal={false}
                                                >
                                                  <Portal
                                                    containerInfo={
                                                      <body>
                                                        <div
                                                          aria-hidden="true"
                                                          class="MuiPopover-root"
                                                          id="profile-menu"
                                                          role="presentation"
                                                          style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px; visibility: hidden;"
                                                        >
                                                          <div
                                                            data-test="sentinelStart"
                                                            tabindex="0"
                                                          />
                                                          <div
                                                            class="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                                                            style="opacity: 0; transform: scale(0.75, 0.5625); visibility: hidden;"
                                                            tabindex="-1"
                                                          >
                                                            <ul
                                                              class="MuiList-root MuiMenu-list MuiList-padding"
                                                              role="menu"
                                                              tabindex="-1"
                                                            >
                                                              <ul
                                                                class="MuiList-root MuiList-padding"
                                                                role="menu"
                                                                tabindex="0"
                                                              >
                                                                <li
                                                                  aria-disabled="false"
                                                                  class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                  role="menuitem"
                                                                  tabindex="0"
                                                                >
                                                                  <span>
                                                                    Dark theme
                                                                  </span>
                                                                  <label
                                                                    class="toggle-checkbox"
                                                                  >
                                                                    <input
                                                                      type="checkbox"
                                                                    />
                                                                    <span
                                                                      class="slider"
                                                                    />
                                                                  </label>
                                                                  <span
                                                                    class="MuiTouchRipple-root"
                                                                  />
                                                                </li>
                                                                <li
                                                                  aria-disabled="false"
                                                                  class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                  role="menuitem"
                                                                  tabindex="-1"
                                                                >
                                                                  <span>
                                                                    Sign out
                                                                  </span>
                                                                  <span
                                                                    class="MuiTouchRipple-root"
                                                                  />
                                                                </li>
                                                              </ul>
                                                            </ul>
                                                          </div>
                                                          <div
                                                            data-test="sentinelEnd"
                                                            tabindex="0"
                                                          />
                                                        </div>
                                                      </body>
                                                    }
                                                  >
                                                    <div
                                                      className="MuiPopover-root"
                                                      id="profile-menu"
                                                      onKeyDown={[Function]}
                                                      role="presentation"
                                                      style={
                                                        Object {
                                                          "bottom": 0,
                                                          "left": 0,
                                                          "position": "fixed",
                                                          "right": 0,
                                                          "top": 0,
                                                          "visibility": "hidden",
                                                          "zIndex": 1300,
                                                        }
                                                      }
                                                    >
                                                      <ForwardRef(SimpleBackdrop)
                                                        invisible={true}
                                                        onClick={[Function]}
                                                        open={false}
                                                      />
                                                      <Unstable_TrapFocus
                                                        disableAutoFocus={false}
                                                        disableEnforceFocus={false}
                                                        disableRestoreFocus={false}
                                                        getDoc={[Function]}
                                                        isEnabled={[Function]}
                                                        open={false}
                                                      >
                                                        <div
                                                          data-test="sentinelStart"
                                                          tabIndex={0}
                                                        />
                                                        <ForwardRef(Grow)
                                                          appear={true}
                                                          in={false}
                                                          onEnter={[Function]}
                                                          onEntering={[Function]}
                                                          onExited={[Function]}
                                                          tabIndex="-1"
                                                          timeout="auto"
                                                        >
                                                          <Transition
                                                            addEndListener={[Function]}
                                                            appear={true}
                                                            enter={true}
                                                            exit={true}
                                                            in={false}
                                                            mountOnEnter={false}
                                                            onEnter={[Function]}
                                                            onEntered={[Function]}
                                                            onEntering={[Function]}
                                                            onExit={[Function]}
                                                            onExited={[Function]}
                                                            onExiting={[Function]}
                                                            tabIndex="-1"
                                                            timeout={null}
                                                            unmountOnExit={false}
                                                          >
                                                            <WithStyles(ForwardRef(Paper))
                                                              className="MuiPopover-paper"
                                                              classes={
                                                                Object {
                                                                  "root": "MuiMenu-paper",
                                                                }
                                                              }
                                                              elevation={8}
                                                              style={
                                                                Object {
                                                                  "opacity": 0,
                                                                  "transform": "scale(0.75, 0.5625)",
                                                                  "visibility": "hidden",
                                                                }
                                                              }
                                                              tabIndex="-1"
                                                            >
                                                              <ForwardRef(Paper)
                                                                className="MuiPopover-paper"
                                                                classes={
                                                                  Object {
                                                                    "elevation0": "MuiPaper-elevation0",
                                                                    "elevation1": "MuiPaper-elevation1",
                                                                    "elevation10": "MuiPaper-elevation10",
                                                                    "elevation11": "MuiPaper-elevation11",
                                                                    "elevation12": "MuiPaper-elevation12",
                                                                    "elevation13": "MuiPaper-elevation13",
                                                                    "elevation14": "MuiPaper-elevation14",
                                                                    "elevation15": "MuiPaper-elevation15",
                                                                    "elevation16": "MuiPaper-elevation16",
                                                                    "elevation17": "MuiPaper-elevation17",
                                                                    "elevation18": "MuiPaper-elevation18",
                                                                    "elevation19": "MuiPaper-elevation19",
                                                                    "elevation2": "MuiPaper-elevation2",
                                                                    "elevation20": "MuiPaper-elevation20",
                                                                    "elevation21": "MuiPaper-elevation21",
                                                                    "elevation22": "MuiPaper-elevation22",
                                                                    "elevation23": "MuiPaper-elevation23",
                                                                    "elevation24": "MuiPaper-elevation24",
                                                                    "elevation3": "MuiPaper-elevation3",
                                                                    "elevation4": "MuiPaper-elevation4",
                                                                    "elevation5": "MuiPaper-elevation5",
                                                                    "elevation6": "MuiPaper-elevation6",
                                                                    "elevation7": "MuiPaper-elevation7",
                                                                    "elevation8": "MuiPaper-elevation8",
                                                                    "elevation9": "MuiPaper-elevation9",
                                                                    "outlined": "MuiPaper-outlined",
                                                                    "root": "MuiPaper-root MuiMenu-paper",
                                                                    "rounded": "MuiPaper-rounded",
                                                                  }
                                                                }
                                                                elevation={8}
                                                                style={
                                                                  Object {
                                                                    "opacity": 0,
                                                                    "transform": "scale(0.75, 0.5625)",
                                                                    "visibility": "hidden",
                                                                  }
                                                                }
                                                                tabIndex="-1"
                                                              >
                                                                <div
                                                                  className="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                                                                  style={
                                                                    Object {
                                                                      "opacity": 0,
                                                                      "transform": "scale(0.75, 0.5625)",
                                                                      "visibility": "hidden",
                                                                    }
                                                                  }
                                                                  tabIndex="-1"
                                                                >
                                                                  <ForwardRef(MenuList)
                                                                    actions={
                                                                      Object {
                                                                        "current": Object {
                                                                          "adjustStyleForScrollbar": [Function],
                                                                        },
                                                                      }
                                                                    }
                                                                    autoFocus={false}
                                                                    autoFocusItem={false}
                                                                    className="MuiMenu-list"
                                                                    onKeyDown={[Function]}
                                                                    variant="selectedMenu"
                                                                  >
                                                                    <WithStyles(ForwardRef(List))
                                                                      className="MuiMenu-list"
                                                                      onKeyDown={[Function]}
                                                                      role="menu"
                                                                      tabIndex={-1}
                                                                    >
                                                                      <ForwardRef(List)
                                                                        className="MuiMenu-list"
                                                                        classes={
                                                                          Object {
                                                                            "dense": "MuiList-dense",
                                                                            "padding": "MuiList-padding",
                                                                            "root": "MuiList-root",
                                                                            "subheader": "MuiList-subheader",
                                                                          }
                                                                        }
                                                                        onKeyDown={[Function]}
                                                                        role="menu"
                                                                        tabIndex={-1}
                                                                      >
                                                                        <ul
                                                                          className="MuiList-root MuiMenu-list MuiList-padding"
                                                                          onKeyDown={[Function]}
                                                                          role="menu"
                                                                          tabIndex={-1}
                                                                        >
                                                                          <ForwardRef(MenuList)
                                                                            autoFocusItem={false}
                                                                            key=".$.0"
                                                                            tabIndex={0}
                                                                          >
                                                                            <WithStyles(ForwardRef(List))
                                                                              onKeyDown={[Function]}
                                                                              role="menu"
                                                                              tabIndex={0}
                                                                            >
                                                                              <ForwardRef(List)
                                                                                classes={
                                                                                  Object {
                                                                                    "dense": "MuiList-dense",
                                                                                    "padding": "MuiList-padding",
                                                                                    "root": "MuiList-root",
                                                                                    "subheader": "MuiList-subheader",
                                                                                  }
                                                                                }
                                                                                onKeyDown={[Function]}
                                                                                role="menu"
                                                                                tabIndex={0}
                                                                              >
                                                                                <ul
                                                                                  className="MuiList-root MuiList-padding"
                                                                                  onKeyDown={[Function]}
                                                                                  role="menu"
                                                                                  tabIndex={0}
                                                                                >
                                                                                  <WithStyles(ForwardRef(MenuItem))
                                                                                    key=".0"
                                                                                    tabIndex={0}
                                                                                  >
                                                                                    <ForwardRef(MenuItem)
                                                                                      classes={
                                                                                        Object {
                                                                                          "dense": "MuiMenuItem-dense",
                                                                                          "gutters": "MuiMenuItem-gutters",
                                                                                          "root": "MuiMenuItem-root",
                                                                                          "selected": "Mui-selected",
                                                                                        }
                                                                                      }
                                                                                      tabIndex={0}
                                                                                    >
                                                                                      <WithStyles(ForwardRef(ListItem))
                                                                                        button={true}
                                                                                        className="MuiMenuItem-root MuiMenuItem-gutters"
                                                                                        classes={
                                                                                          Object {
                                                                                            "dense": "MuiMenuItem-dense",
                                                                                          }
                                                                                        }
                                                                                        component="li"
                                                                                        disableGutters={false}
                                                                                        role="menuitem"
                                                                                        tabIndex={0}
                                                                                      >
                                                                                        <ForwardRef(ListItem)
                                                                                          button={true}
                                                                                          className="MuiMenuItem-root MuiMenuItem-gutters"
                                                                                          classes={
                                                                                            Object {
                                                                                              "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                                                              "button": "MuiListItem-button",
                                                                                              "container": "MuiListItem-container",
                                                                                              "dense": "MuiListItem-dense MuiMenuItem-dense",
                                                                                              "disabled": "Mui-disabled",
                                                                                              "divider": "MuiListItem-divider",
                                                                                              "focusVisible": "Mui-focusVisible",
                                                                                              "gutters": "MuiListItem-gutters",
                                                                                              "root": "MuiListItem-root",
                                                                                              "secondaryAction": "MuiListItem-secondaryAction",
                                                                                              "selected": "Mui-selected",
                                                                                            }
                                                                                          }
                                                                                          component="li"
                                                                                          disableGutters={false}
                                                                                          role="menuitem"
                                                                                          tabIndex={0}
                                                                                        >
                                                                                          <WithStyles(ForwardRef(ButtonBase))
                                                                                            className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                                            component="li"
                                                                                            disabled={false}
                                                                                            focusVisibleClassName="Mui-focusVisible"
                                                                                            role="menuitem"
                                                                                            tabIndex={0}
                                                                                          >
                                                                                            <ForwardRef(ButtonBase)
                                                                                              className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                                              classes={
                                                                                                Object {
                                                                                                  "disabled": "Mui-disabled",
                                                                                                  "focusVisible": "Mui-focusVisible",
                                                                                                  "root": "MuiButtonBase-root",
                                                                                                }
                                                                                              }
                                                                                              component="li"
                                                                                              disabled={false}
                                                                                              focusVisibleClassName="Mui-focusVisible"
                                                                                              role="menuitem"
                                                                                              tabIndex={0}
                                                                                            >
                                                                                              <li
                                                                                                aria-disabled={false}
                                                                                                className="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                                                onBlur={[Function]}
                                                                                                onDragLeave={[Function]}
                                                                                                onFocus={[Function]}
                                                                                                onKeyDown={[Function]}
                                                                                                onKeyUp={[Function]}
                                                                                                onMouseDown={[Function]}
                                                                                                onMouseLeave={[Function]}
                                                                                                onMouseUp={[Function]}
                                                                                                onTouchEnd={[Function]}
                                                                                                onTouchMove={[Function]}
                                                                                                onTouchStart={[Function]}
                                                                                                role="menuitem"
                                                                                                tabIndex={0}
                                                                                              >
                                                                                                <span
                                                                                                  key=".0"
                                                                                                >
                                                                                                  Dark theme
                                                                                                </span>
                                                                                                <label
                                                                                                  className="toggle-checkbox"
                                                                                                  key=".2"
                                                                                                >
                                                                                                  <input
                                                                                                    type="checkbox"
                                                                                                  />
                                                                                                  <span
                                                                                                    className="slider"
                                                                                                  />
                                                                                                </label>
                                                                                                <WithStyles(memo)
                                                                                                  center={false}
                                                                                                >
                                                                                                  <ForwardRef(TouchRipple)
                                                                                                    center={false}
                                                                                                    classes={
                                                                                                      Object {
                                                                                                        "child": "MuiTouchRipple-child",
                                                                                                        "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                                        "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                                        "ripple": "MuiTouchRipple-ripple",
                                                                                                        "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                                        "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                                        "root": "MuiTouchRipple-root",
                                                                                                      }
                                                                                                    }
                                                                                                  >
                                                                                                    <span
                                                                                                      className="MuiTouchRipple-root"
                                                                                                    >
                                                                                                      <TransitionGroup
                                                                                                        childFactory={[Function]}
                                                                                                        component={null}
                                                                                                        exit={true}
                                                                                                      />
                                                                                                    </span>
                                                                                                  </ForwardRef(TouchRipple)>
                                                                                                </WithStyles(memo)>
                                                                                              </li>
                                                                                            </ForwardRef(ButtonBase)>
                                                                                          </WithStyles(ForwardRef(ButtonBase))>
                                                                                        </ForwardRef(ListItem)>
                                                                                      </WithStyles(ForwardRef(ListItem))>
                                                                                    </ForwardRef(MenuItem)>
                                                                                  </WithStyles(ForwardRef(MenuItem))>
                                                                                  <WithStyles(ForwardRef(MenuItem))
                                                                                    key=".1"
                                                                                  >
                                                                                    <ForwardRef(MenuItem)
                                                                                      classes={
                                                                                        Object {
                                                                                          "dense": "MuiMenuItem-dense",
                                                                                          "gutters": "MuiMenuItem-gutters",
                                                                                          "root": "MuiMenuItem-root",
                                                                                          "selected": "Mui-selected",
                                                                                        }
                                                                                      }
                                                                                    >
                                                                                      <WithStyles(ForwardRef(ListItem))
                                                                                        button={true}
                                                                                        className="MuiMenuItem-root MuiMenuItem-gutters"
                                                                                        classes={
                                                                                          Object {
                                                                                            "dense": "MuiMenuItem-dense",
                                                                                          }
                                                                                        }
                                                                                        component="li"
                                                                                        disableGutters={false}
                                                                                        role="menuitem"
                                                                                        tabIndex={-1}
                                                                                      >
                                                                                        <ForwardRef(ListItem)
                                                                                          button={true}
                                                                                          className="MuiMenuItem-root MuiMenuItem-gutters"
                                                                                          classes={
                                                                                            Object {
                                                                                              "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                                                              "button": "MuiListItem-button",
                                                                                              "container": "MuiListItem-container",
                                                                                              "dense": "MuiListItem-dense MuiMenuItem-dense",
                                                                                              "disabled": "Mui-disabled",
                                                                                              "divider": "MuiListItem-divider",
                                                                                              "focusVisible": "Mui-focusVisible",
                                                                                              "gutters": "MuiListItem-gutters",
                                                                                              "root": "MuiListItem-root",
                                                                                              "secondaryAction": "MuiListItem-secondaryAction",
                                                                                              "selected": "Mui-selected",
                                                                                            }
                                                                                          }
                                                                                          component="li"
                                                                                          disableGutters={false}
                                                                                          role="menuitem"
                                                                                          tabIndex={-1}
                                                                                        >
                                                                                          <WithStyles(ForwardRef(ButtonBase))
                                                                                            className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                                            component="li"
                                                                                            disabled={false}
                                                                                            focusVisibleClassName="Mui-focusVisible"
                                                                                            role="menuitem"
                                                                                            tabIndex={-1}
                                                                                          >
                                                                                            <ForwardRef(ButtonBase)
                                                                                              className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                                              classes={
                                                                                                Object {
                                                                                                  "disabled": "Mui-disabled",
                                                                                                  "focusVisible": "Mui-focusVisible",
                                                                                                  "root": "MuiButtonBase-root",
                                                                                                }
                                                                                              }
                                                                                              component="li"
                                                                                              disabled={false}
                                                                                              focusVisibleClassName="Mui-focusVisible"
                                                                                              role="menuitem"
                                                                                              tabIndex={-1}
                                                                                            >
                                                                                              <li
                                                                                                aria-disabled={false}
                                                                                                className="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                                                onBlur={[Function]}
                                                                                                onDragLeave={[Function]}
                                                                                                onFocus={[Function]}
                                                                                                onKeyDown={[Function]}
                                                                                                onKeyUp={[Function]}
                                                                                                onMouseDown={[Function]}
                                                                                                onMouseLeave={[Function]}
                                                                                                onMouseUp={[Function]}
                                                                                                onTouchEnd={[Function]}
                                                                                                onTouchMove={[Function]}
                                                                                                onTouchStart={[Function]}
                                                                                                role="menuitem"
                                                                                                tabIndex={-1}
                                                                                              >
                                                                                                <span
                                                                                                  key=".0"
                                                                                                >
                                                                                                  Sign out
                                                                                                </span>
                                                                                                <WithStyles(memo)
                                                                                                  center={false}
                                                                                                >
                                                                                                  <ForwardRef(TouchRipple)
                                                                                                    center={false}
                                                                                                    classes={
                                                                                                      Object {
                                                                                                        "child": "MuiTouchRipple-child",
                                                                                                        "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                                        "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                                        "ripple": "MuiTouchRipple-ripple",
                                                                                                        "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                                        "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                                        "root": "MuiTouchRipple-root",
                                                                                                      }
                                                                                                    }
                                                                                                  >
                                                                                                    <span
                                                                                                      className="MuiTouchRipple-root"
                                                                                                    >
                                                                                                      <TransitionGroup
                                                                                                        childFactory={[Function]}
                                                                                                        component={null}
                                                                                                        exit={true}
                                                                                                      />
                                                                                                    </span>
                                                                                                  </ForwardRef(TouchRipple)>
                                                                                                </WithStyles(memo)>
                                                                                              </li>
                                                                                            </ForwardRef(ButtonBase)>
                                                                                          </WithStyles(ForwardRef(ButtonBase))>
                                                                                        </ForwardRef(ListItem)>
                                                                                      </WithStyles(ForwardRef(ListItem))>
                                                                                    </ForwardRef(MenuItem)>
                                                                                  </WithStyles(ForwardRef(MenuItem))>
                                                                                </ul>
                                                                              </ForwardRef(List)>
                                                                            </WithStyles(ForwardRef(List))>
                                                                          </ForwardRef(MenuList)>
                                                                        </ul>
                                                                      </ForwardRef(List)>
                                                                    </WithStyles(ForwardRef(List))>
                                                                  </ForwardRef(MenuList)>
                                                                </div>
                                                              </ForwardRef(Paper)>
                                                            </WithStyles(ForwardRef(Paper))>
                                                          </Transition>
                                                        </ForwardRef(Grow)>
                                                        <div
                                                          data-test="sentinelEnd"
                                                          tabIndex={0}
                                                        />
                                                      </Unstable_TrapFocus>
                                                    </div>
                                                  </Portal>
                                                </ForwardRef(Portal)>
                                              </ForwardRef(Modal)>
                                            </ForwardRef(Popover)>
                                          </WithStyles(ForwardRef(Popover))>
                                        </ForwardRef(Menu)>
                                      </WithStyles(ForwardRef(Menu))>
                                    </ProfileMenu>
                                  </div>
                                </styled.div>
                              </div>
                            </ForwardRef(Toolbar)>
                          </WithStyles(ForwardRef(Toolbar))>
                        </header>
                      </ForwardRef(Paper)>
                    </WithStyles(ForwardRef(Paper))>
                  </ForwardRef(AppBar)>
                </WithStyles(ForwardRef(AppBar))>
              </Header>
            </div>
          </AppLayout>
          <styled.section>
            <section
              className="sc-pNWdM fLVMPI"
            >
              <styled.div>
                <div
                  className="sc-kEqXSa gyKYqr"
                >
                  <styled.div
                    id="player"
                  >
                    <div
                      className="sc-jrsJWt iCBGgI"
                      id="player"
                    >
                      <iframe
                        allowFullScreen={true}
                        className="video"
                        frameBorder="0"
                        src="https://www.youtube.com/embed/undefined"
                        title="YouTube video player"
                      />
                    </div>
                  </styled.div>
                  <div>
                    <div
                      className="video-detail-title"
                    >
                      <h2 />
                    </div>
                    <div
                      className="video-detail-description"
                    />
                  </div>
                </div>
              </styled.div>
              <styled.div>
                <div
                  className="sc-iqAclL fXJhaP"
                />
              </styled.div>
            </section>
          </styled.section>
        </section>
      </VideoDetails>
    </withRouter(VideoDetails)>
  </Router>
</BrowserRouter>
`;
